html
    include main_parts/_head
    include main_parts/_header
    body
        .content
            include views/_chat

            script.

                function initSendButton(chat) {
                    var input = $('.input')
                    var ChatMessage = Parse.Object.extend('ChatMessage')
                    $('.send').click(function() {
                        var msgTxt = input.val()

                        if (!msgTxt || msgTxt == "") {
                            return;
                        }

                        var message = new ChatMessage()
                        message.set('chat', chat)
                        message.set('message', msgTxt)
                        message.set('sentBy', Parse.User.current())
                        input.val('')
                        message.save()
                    })
                }

                var chatKey;
                var chat;
                var msgQuery;
                var messages;

                var addMessage = function(message) {
                    messages.push(message)

                    var cl;

                    if (message.get('sentBy').id === Parse.User.current().id) {
                        cl = 'right'
                    } else {
                        cl = 'left'
                    }

                    var $msg = $('<div></div>')
                    $msg.text(message.get('message'))
                    $msg.addClass(cl)
                    $msg.addClass('message')

                    $('.message-container').append($msg)
                    document.body.scrollTop = $(document).height();
                }

                Parse.Promise.resolve().then(function() {
                    var userQuery = new Parse.Query(Parse.User)
                    userQuery.include('mentor')
                    return userQuery.get(Parse.User.current().id)
                }).then(function(user) {

                    if (user.get('isMentor')) {
                        var query = new Parse.Query(Parse.User)
                        query.equalTo('mentor', user);
                        return query.first().then(function(u) {
                            chatKey = u.id + user.id;
                            return Parse.Promise.resolve(chatKey);
                        })
                    } else {
                        var mentor = user.get('mentor')
                        chatKey = user.id + mentor.id;
                        return Parse.Promise.resolve(chatKey);
                    }

                }).then(function(cK) {

                    var chatQuery = new Parse.Query('Chat')
                    chatQuery.equalTo('key', chatKey)

                    return chatQuery.first()
                }).then(function(c) {
                    if (!c) {
                        var Chat = Parse.Object.extend('Chat')
                        c = new Chat()
                        c.set('key', chatKey)
                        return c.save()
                    } else {
                        return Parse.Promise.resolve(c)
                    }
                })
                .then(function(c) {
                    chat = c;

                    initSendButton(chat)

                    msgQuery = new Parse.Query('ChatMessage')
                    msgQuery.equalTo('chat', c)
                    msgQuery.limit(20)
                    msgQuery.include('sentBy')
                    msgQuery.descending('createdAt')

                    return msgQuery.find()
                })
                .then(function(msgs) {
                    messages = msgs.reverse();

                    messages.map(function(message) {
                        addMessage(message)
                    })

                    var q = new Parse.Query('ChatMessage')
                    q.equalTo('chat', chat)
                    q.include('sentBy')

                    if (window.subscription) {
                        window.subscription.unsubscribe();
                    }

                    window.subscription = q.subscribe()
                    window.subscription.on('create', function(message) {
                        addMessage(message)
                    });

                })
